---
import ReactHeader from "../components/Header";
export interface Props {
  pageTitle?: string;
  title?: string;
  description?: string;
  hideHeader?: boolean;
  og?: {
    type?: string;
    title?: string;
    sitename?: string;
    image?: string;
    twitter?: {
      card?: string;
      site?: string;
      creator?: string;
    };
  };
  jsonld?: {
    attype?: string;
    author?: {
      type?: string;
      name?: string;
      url?: string;
    };
  };
}

const SITE_TITLE = "takum1.me";
const { pageTitle, title, description, hideHeader = false, og, jsonld } = Astro.props;

const metadata = {
  title: title ?? (pageTitle ? `${pageTitle} - ${SITE_TITLE}` : SITE_TITLE),
  description: description ?? "takum1's brew",
  og: {
    type: og?.type ?? "website",
    title:
      og?.title ?? (pageTitle ? `${pageTitle} - ${SITE_TITLE}` : SITE_TITLE),
    sitename: og?.sitename ?? SITE_TITLE,
    image: og?.image ?? Astro.site + "og.png", //完全修飾URLである必要がある
    twitter: {
      card: og?.twitter?.card ?? "summary_large_image",
      site: og?.twitter?.site ?? "@takum1_me",
      creator: og?.twitter?.creator ?? "@takum1_me",
    },
  },
  jsonld: {
    attype: jsonld?.attype ?? "WebSite",
    author: {
      attype: jsonld?.author?.type ?? "Person",
      name: jsonld?.author?.name ?? "takum1",
      url: jsonld?.author?.url ?? "https://takum1.me",
    },
  },
};

const jsonldStringfy = JSON.stringify({
  "@type": metadata.jsonld.attype,
  author: [
    {
      "@type": metadata.jsonld.author.attype,
      name: metadata.jsonld.author.name,
      url: metadata.jsonld.author.url,
    },
  ],
});
---

<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <title>{metadata.title}</title>
    <meta name="description" content={metadata.description} />
    <meta property="og:title" content={metadata.og.title} />
    <meta property="og:site_name" content={metadata.og.sitename} />
    <meta property="og:image" content={metadata.og.image} />
    <meta name="twitter:card" content={metadata.og.twitter.card} />
    <meta property="twitter:site" content={metadata.og.twitter.site} />
    <meta property="twitter:creator" content={metadata.og.twitter.creator} />
    <script type="application/ld+json" is:inline set:html={jsonldStringfy} />
    <meta name="generator" content={Astro.generator} />
    <title>{metadata.title}</title>
    <meta name="description" content={description} />
    <link rel="stylesheet" href="/src/styles/global.css" />
  </head>
  <body>
    {!hideHeader && <ReactHeader client:only="react" />}
    <main class="main-content">
      <div class="container">
        <slot />
      </div>
    </main>
    <footer>
      <div class="container">
        © {new Date().getFullYear()} takum1
      </div>
    </footer>
  </body>
  
  <style>
    html, body {
      background: #faf8f5; /* クリーム色の背景 */
      min-height: 100vh;
      margin: 0;
      padding: 0;
      overflow-x: hidden;
      overflow-y: visible;
    }
    
    .main-content {
      padding-top: 5rem; /* ヘッダーの高さ分のマージンを追加 */
    }
    
    @media (max-width: 768px) {
      .main-content {
        padding-top: 4.5rem; /* モバイルでは少し小さく */
      }
    }
  </style>
</html>
