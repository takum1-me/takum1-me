---
import Layout from "../layouts/Layout.astro";
import Button from "../components/button/Button";
import HomeArticleCard from "../components/card/HomeArticleCard";
import ThoughtDisplay from "../components/thought/ThoughtDisplay";
import { getLatestBlogs } from "../lib/microcms";
import SongCard from "../components/music/SongCard";
import { loadSongsData } from "../lib/songs-loader";
import "../components/button/button.css";
import "../components/card/home-article-card.css";
import "../components/thought/thought-display.css";
import "../components/thought/thought-modal.css";
import "../components/music/song-card.css";

// 最新の3件のブログを取得
const latestBlogs = await getLatestBlogs(3);

// 楽曲データを動的に取得
const songsData = await loadSongsData();
---

<Layout title="takum1.me">
  <section class="hero">
    <div class="hero-inner">
      <div class="hero-content">
        <div class="hero-text">
          <h1 class="site-title">takum1</h1>
          <div class="site-sub">
            <div class="sub-line">Undergraduate / Brewer</div>
            <div class="sub-line">Coffee, Programming, Design</div>
          </div>
          <div class="hero-description">
            <ThoughtDisplay client:load />
          </div>
                 <div class="hero-music">
                   <h3 class="favorite-songs-title">お気に入りの曲</h3>
                   <div class="songs-grid">
                     {songsData.map((song, index) => (
                       <SongCard 
                         title={song.title}
                         artist={song.artist}
                         appleMusicUrl={song.appleMusicUrl}
                         artworkUrl={song.artworkUrl}
                       />
                     ))}
                   </div>
                 </div>
          <div class="hero-cta">
            <Button href="/about" variant="primary">About Me</Button>
            <Button href="/blog" variant="secondary">Latest Posts</Button>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- 最新ブログセクション -->
  <section class="latest-blogs">
    <div class="latest-blogs-inner">
      <div class="section-header">
        <h2 class="section-title">Latest Posts</h2>
        <p class="section-description">最新のブログ投稿</p>
      </div>
      
      <div class="blog-grid">
        {latestBlogs.map((blog) => (
          <HomeArticleCard
            client:load
            title={blog.title}
            summary={blog.summary}
            publishedAt={blog.publishedAt}
            thumbnail={blog.thumbnail}
            slug={blog.slug}
            category={blog.category}
          />
        ))}
      </div>
      
      <div class="section-footer">
        <Button href="/blog" variant="secondary">すべての記事を見る</Button>
      </div>
    </div>
  </section>

  <style>
    
    .hero { 
      padding: 4rem 0; 
      border-bottom: none; 
      min-height: 80vh;
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;
      background: var(--background);
    }
    
    .hero-inner { 
      display: flex; 
      justify-content: center; 
      align-items: center;
      width: 100%;
      position: relative;
      max-width: var(--max-width);
      margin: 0 auto;
      padding: 0 2rem;
    }
    
    .hero-content {
      display: grid;
      grid-template-columns: 1fr auto;
      gap: 4rem;
      align-items: center;
      width: 100%;
    }
    
    .hero-text {
      max-width: 600px;
    }
    
    .site-title { 
      font-size: 4rem; 
      margin: 0 0 1rem 0; 
      letter-spacing: 0.02em; 
      color: var(--text-primary);
      font-weight: 800;
      line-height: 1.1;
    }
    
    .site-sub { 
      margin: 0 0 2rem 0; 
      color: var(--text-secondary);
      font-size: 1.4rem;
      line-height: 1.6;
      font-weight: 500;
    }
    
    .sub-line {
      margin-bottom: 0.5rem;
    }
    
    .sub-line:last-child {
      margin-bottom: 0;
    }
    
    .hero-cta {
      display: flex;
      gap: 1rem;
      margin-top: 2rem;
    }
    
    .cta-button {
      padding: 0.875rem 1.75rem;
      border-radius: 0.5rem;
      text-decoration: none;
      font-weight: 600;
      font-size: 1rem;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      border: 2px solid transparent;
      position: relative;
      overflow: hidden;
    }
    
    .cta-button:not(.secondary) {
      background: transparent;
      color: var(--secondary);
      border: 2px solid var(--secondary);
      position: relative;
      overflow: hidden;
      transition: color 0.2s ease 0.2s;
    }
    
    .cta-button:not(.secondary)::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 0;
      background: var(--secondary);
      z-index: 0;
      transition: height 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .cta-button:not(.secondary) span {
      position: relative;
      z-index: 1;
    }
    
    .cta-button:not(.secondary):hover {
      color: white;
    }
    
    .cta-button:not(.secondary):hover::before {
      height: 100%;
    }
    
    .cta-button.secondary {
      background: transparent;
      color: var(--text-muted);
      border-color: var(--text-muted);
    }
    
    .cta-button.secondary:hover {
      background: var(--surface);
      border-color: var(--text-muted);
      transform: translateY(-2px);
    }
    
    .hero-description {
      margin: 2rem 0;
    }
    
    .favorite-songs-title {
      font-size: 1.5rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: var(--text-primary);
    }
    
    .songs-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 1rem;
      margin-top: 1rem;
    }
    
    .hero-description p {
      font-size: 1.1rem;
      line-height: 1.7;
      color: var(--text-secondary);
      margin: 0;
      font-weight: 400;
    }
    
    /* 一言コンポーネントのスタイル調整 */
    .hero-description .thought-display {
      background: rgba(255, 255, 255, 0.05);
      border: 1px solid var(--primary-10);
      margin: 0;
      padding: 1.25rem;
    }
    
    .hero-description .thought-display:hover {
      background: rgba(255, 255, 255, 0.08);
      border-color: var(--primary-15);
    }
    
    .hero-description .thought-content {
      font-size: 1.1rem;
      color: var(--text-secondary);
      margin: 0 0 0.5rem 0;
    }
    
    .hero-description .thought-date {
      font-size: 0.8rem;
      color: var(--text-muted);
    }
    
    p {
      color: var(--text-secondary);
      line-height: 1.7;
      margin: 0;
    }

    @media (max-width: 768px) {
      .hero-content {
        grid-template-columns: 1fr;
        gap: 2rem;
        text-align: center;
      }
      
      .site-title {
        font-size: 3rem;
      }
      
      .site-sub {
        font-size: 1.2rem;
      }
      
      
      .hero-cta {
        justify-content: center;
        flex-wrap: wrap;
      }
    }

    @media (max-width: 480px) {
      .hero {
        padding: 2rem 0;
        min-height: 70vh;
      }
      
      .site-title {
        font-size: 2.5rem;
      }
      
      .site-sub {
        font-size: 1.1rem;
      }
      
      
      .cta-button {
        padding: 0.75rem 1.5rem;
        font-size: 0.9rem;
      }
      
      .hero-description .thought-display {
        padding: 1rem;
      }
      
      .hero-description .thought-content {
        font-size: 1rem;
      }
      
      .hero-description .thought-date {
        font-size: 0.75rem;
      }
      
      .songs-grid {
        grid-template-columns: 1fr;
        gap: 0.75rem;
      }
    }

    /* 最新ブログセクションのスタイル */
    .latest-blogs {
      padding: 4rem 0;
      background: var(--background);
      border-top: 1px solid var(--primary-10);
    }
    
    .latest-blogs-inner {
      max-width: var(--max-width);
      margin: 0 auto;
      padding: 0 2rem;
    }
    
    .section-header {
      text-align: center;
      margin-bottom: 3rem;
    }
    
    .section-title {
      font-size: 2.5rem;
      font-weight: 700;
      color: var(--text-primary);
      margin: 0 0 1rem 0;
      letter-spacing: 0.02em;
    }
    
    .section-description {
      font-size: 1.1rem;
      color: var(--text-secondary);
      margin: 0;
    }
    
    .blog-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 2rem;
      margin-bottom: 3rem;
    }
    
    .section-footer {
      text-align: center;
    }
    
    /* タブレット対応 */
    @media (max-width: 1024px) {
      .blog-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 1.5rem;
      }
    }
    
    /* モバイル対応 */
    @media (max-width: 768px) {
      .latest-blogs {
        padding: 3rem 0;
      }
      
      .latest-blogs-inner {
        padding: 0 1rem;
      }
      
      .section-title {
        font-size: 2rem;
      }
      
      .blog-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }
      
      .section-header {
        margin-bottom: 2rem;
      }
    }

  </style>
  
</Layout>